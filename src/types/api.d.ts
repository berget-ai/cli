/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


/** OneOf type helpers */
type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };
type XOR<T, U> = (T | U) extends object ? (Without<T, U> & U) | (Without<U, T> & T) : T | U;
type OneOf<T extends any[]> = T extends [infer Only] ? Only : T extends [infer A, infer B, ...infer Rest] ? OneOf<[XOR<A, B>, ...Rest]> : never;

export interface paths {
  "/v1/api-keys": {
    /**
     * List all API keys
     * @description Lists all API keys for the authenticated user's organization.
     */
    get: {
      responses: {
        /** @description List of API keys */
        200: {
          content: {
            "application/json": components["schemas"]["ApiKeyListResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Server error */
        500: {
          content: never;
        };
      };
    };
    /**
     * Create a new API key
     * @description Creates a new API key for the authenticated user's organization. The full API key is only returned once at creation time.
     */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["CreateApiKey"];
        };
      };
      responses: {
        /** @description API key created successfully */
        201: {
          content: {
            "application/json": components["schemas"]["CreateApiKeyResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Server error */
        500: {
          content: never;
        };
      };
    };
  };
  "/v1/api-keys/{id}": {
    /**
     * Delete an API key
     * @description Permanently deletes an API key
     */
    delete: {
      parameters: {
        path: {
          /** @description API key ID */
          id: string;
        };
      };
      responses: {
        /** @description API key deleted successfully */
        204: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description API key not found */
        404: {
          content: never;
        };
        /** @description Server error */
        500: {
          content: never;
        };
      };
    };
  };
  "/v1/api-keys/{id}/rotate": {
    /**
     * Rotate an API key
     * @description Rotates an API key by invalidating the old key and generating a new one. The new key is returned in the response and is only shown once.
     */
    put: {
      parameters: {
        path: {
          /** @description API key ID */
          id: string;
        };
      };
      responses: {
        /** @description API key rotated successfully */
        200: {
          content: {
            "application/json": components["schemas"]["CreateApiKeyResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description API key not found */
        404: {
          content: never;
        };
        /** @description Server error */
        500: {
          content: never;
        };
      };
    };
  };
  "/v1/api-keys/{id}/usage": {
    /**
     * Get API key usage statistics
     * @description Returns usage statistics for a specific API key including request count, daily breakdown, model-specific usage, and token consumption.
     */
    get: {
      parameters: {
        query?: {
          /** @description Start date in YYYY-MM-DD format */
          start_date?: string;
          /** @description End date in YYYY-MM-DD format */
          end_date?: string;
        };
        path: {
          /** @description API key ID */
          id: string;
        };
      };
      responses: {
        /** @description API key usage statistics */
        200: {
          content: {
            "application/json": components["schemas"]["ApiKeyUsageResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description API key not found */
        404: {
          content: never;
        };
        /** @description Server error */
        500: {
          content: never;
        };
      };
    };
  };
  "/v1/apps/templates": {
    /**
     * List app templates
     * @description Retrieves a list of all available application templates that can be installed in your cluster
     */
    get: {
      responses: {
        /** @description List of app templates */
        200: {
          content: {
            "application/json": components["schemas"]["AppTemplateList"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Server error */
        500: {
          content: never;
        };
      };
    };
  };
  "/v1/apps/templates/{appId}": {
    /**
     * Get app template details
     * @description Retrieves detailed information about a specific app template
     */
    get: {
      parameters: {
        path: {
          /** @description App template ID */
          appId: string;
        };
      };
      responses: {
        /** @description App template details */
        200: {
          content: {
            "application/json": components["schemas"]["AppTemplate"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description App template not found */
        404: {
          content: never;
        };
        /** @description Server error */
        500: {
          content: never;
        };
      };
    };
  };
  "/v1/apps/installations": {
    /**
     * List app installations
     * @description Retrieves a list of all installed applications in your clusters
     */
    get: {
      responses: {
        /** @description List of app installations */
        200: {
          content: {
            "application/json": components["schemas"]["AppInstallationList"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Server error */
        500: {
          content: never;
        };
      };
    };
    /**
     * Install an app
     * @description Installs an application from a template into your cluster
     */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["AppInstallRequest"];
        };
      };
      responses: {
        /** @description App installation initiated */
        201: {
          content: {
            "application/json": components["schemas"]["AppInstallation"];
          };
        };
        /** @description Invalid request */
        400: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description App template not found */
        404: {
          content: never;
        };
        /** @description Server error */
        500: {
          content: never;
        };
      };
    };
  };
  "/v1/apps/installations/{installationId}": {
    /**
     * Get installation details
     * @description Retrieves detailed information about a specific app installation
     */
    get: {
      parameters: {
        path: {
          /** @description Installation ID */
          installationId: string;
        };
      };
      responses: {
        /** @description Installation details */
        200: {
          content: {
            "application/json": components["schemas"]["AppInstallation"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Installation not found */
        404: {
          content: never;
        };
        /** @description Server error */
        500: {
          content: never;
        };
      };
    };
    /**
     * Uninstall an app
     * @description Removes an installed application from your cluster
     */
    delete: {
      parameters: {
        path: {
          /** @description Installation ID */
          installationId: string;
        };
      };
      responses: {
        /** @description App uninstallation initiated */
        204: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Installation not found */
        404: {
          content: never;
        };
        /** @description Server error */
        500: {
          content: never;
        };
      };
    };
  };
  "/v1/auth/login": {
    /**
     * OAuth login
     * @description Initiates OAuth login flow via Keycloak
     */
    get: {
      parameters: {
        query?: {
          /** @description URL to redirect to after successful login */
          redirect_uri?: string;
        };
      };
      responses: {
        /** @description Redirects to Keycloak for login */
        302: {
          content: never;
        };
      };
    };
  };
  "/v1/auth/callback": {
    /**
     * OAuth callback
     * @description Handles Keycloak login callback and exchanges token
     */
    get: {
      parameters: {
        query: {
          code: string;
          state: string;
        };
      };
      responses: {
        /** @description Redirects to frontend */
        302: {
          content: never;
        };
      };
    };
  };
  "/v1/auth/device": {
    /** Initiate device authorization flow */
    post: {
      responses: {
        /** @description Device authorization initiated */
        200: {
          content: never;
        };
      };
    };
  };
  "/v1/auth/device/token": {
    /** Poll for device token */
    post: {
      requestBody: {
        content: {
          "application/json": {
            device_code?: string;
          };
        };
      };
      responses: {
        /** @description Token returned or pending status */
        200: {
          content: never;
        };
      };
    };
  };
  "/v1/auth/register-url": {
    /** Get Keycloak registration URL */
    get: {
      responses: {
        /** @description Registration URL returned */
        200: {
          content: {
            "application/json": {
              url?: string;
            };
          };
        };
      };
    };
  };
  "/v1/auth/logout": {
    /**
     * Logout
     * @description Clears cookies and redirects to Keycloak logout
     */
    get: {
      parameters: {
        query?: {
          redirect_uri?: string;
        };
      };
      responses: {
        /** @description Redirects to logout page */
        302: {
          content: never;
        };
      };
    };
  };
  "/v1/billing/usage": {
    /**
     * Get current usage
     * @description Retrieves current billing period usage metrics and costs. Shows detailed breakdown of API calls, compute resources, and other billable items. This helps you understand your current billing status.
     */
    get: {
      responses: {
        /** @description Current usage metrics */
        200: {
          content: {
            "application/json": components["schemas"]["Usage"];
          };
        };
      };
    };
  };
  "/v1/billing/invoices": {
    /**
     * List invoices
     * @description Retrieves all invoices for the authenticated user
     */
    get: {
      responses: {
        /** @description List of invoices */
        200: {
          content: {
            "application/json": {
              invoices?: components["schemas"]["Invoice"][];
            };
          };
        };
      };
    };
  };
  "/v1/billing/invoices/{id}": {
    /**
     * Get invoice details
     * @description Retrieves details for a specific invoice
     */
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Invoice details */
        200: {
          content: {
            "application/json": components["schemas"]["Invoice"];
          };
        };
      };
    };
  };
  "/v1/billing/payment-methods": {
    /**
     * List payment methods
     * @description Retrieves all payment methods for the authenticated user
     */
    get: {
      responses: {
        /** @description List of payment methods */
        200: {
          content: {
            "application/json": {
              paymentMethods?: components["schemas"]["PaymentMethod"][];
            };
          };
        };
      };
    };
    /**
     * Add payment method
     * @description Adds a new payment method for the authenticated user
     */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["CreatePaymentMethod"];
        };
      };
      responses: {
        /** @description Payment method added */
        201: {
          content: {
            "application/json": components["schemas"]["PaymentMethod"];
          };
        };
      };
    };
  };
  "/v1/billing/payment-methods/{id}": {
    /**
     * Remove payment method
     * @description Removes a payment method for the authenticated user
     */
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Payment method removed */
        204: {
          content: never;
        };
      };
    };
  };
  "/v1/billing/subscription": {
    /**
     * Update subscription
     * @description Updates the subscription plan for the authenticated user
     */
    put: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["UpdateSubscription"];
        };
      };
      responses: {
        /** @description Subscription updated */
        200: {
          content: never;
        };
      };
    };
  };
  "/v1/chat/completions": {
    /**
     * Create a chat completion
     * @description Creates a model response for the given chat conversation.
     *
     * This endpoint is compatible with OpenAI's chat completions API, making it easy to switch between providers.
     *
     * ## Quick Start
     *
     * 1. Get an API key from the dashboard or `/v1/api-keys` endpoint
     * 2. Make a request with your messages:
     *
     * ```json
     * {
     *   "model": "berget-70b-instruct",
     *   "messages": [
     *     {"role": "system", "content": "You are a helpful assistant."},
     *     {"role": "user", "content": "Hello!"}
     *   ],
     *   "temperature": 0.7
     * }
     * ```
     *
     * 3. Process the response which contains the assistant's reply
     *
     * ## Streaming
     *
     * To receive a streaming response, set `stream: true` in your request:
     *
     * ```json
     * {
     *   "model": "berget-70b-instruct",
     *   "messages": [
     *     {"role": "system", "content": "You are a helpful assistant."},
     *     {"role": "user", "content": "Write a short story."}
     *   ],
     *   "stream": true
     * }
     * ```
     *
     * The response will be a stream of server-sent events (SSE), with each event containing a chunk of the response.
     */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["ChatCompletionRequest"];
        };
      };
      responses: {
        /** @description Successful completion */
        200: {
          content: {
            "application/json": components["schemas"]["ChatCompletionResponse"];
          };
        };
        /** @description Invalid request */
        400: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
      };
    };
  };
  "/v1/clusters": {
    /**
     * List all clusters
     * @description Retrieves a list of all Kubernetes clusters in the customer's namespace
     */
    get: {
      responses: {
        /** @description List of clusters */
        200: {
          content: {
            "application/json": components["schemas"]["ClusterList"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Server error */
        500: {
          content: never;
        };
      };
    };
  };
  "/v1/clusters/usage": {
    /**
     * Get cluster usage
     * @description Retrieves resource usage and cost data across all Kubernetes clusters for the current billing period
     */
    get: {
      responses: {
        /** @description Cluster usage data */
        200: {
          content: {
            "application/json": components["schemas"]["ClustersUsageResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Server error */
        500: {
          content: never;
        };
      };
    };
  };
  "/v1/clusters/{clusterId}/usage": {
    /**
     * Get detailed usage for a specific cluster
     * @description Retrieves detailed resource usage and cost data for a specific Kubernetes cluster
     */
    get: {
      parameters: {
        path: {
          /** @description The cluster identifier */
          clusterId: string;
        };
      };
      responses: {
        /** @description Detailed cluster usage data */
        200: {
          content: {
            "application/json": components["schemas"]["ClusterDetailedUsage"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Cluster not found */
        404: {
          content: never;
        };
        /** @description Server error */
        500: {
          content: never;
        };
      };
    };
  };
  "/v1/models": {
    /**
     * List available models
     * @description Retrieves a list of all available AI models with their specifications, capabilities, and pricing information. Use this endpoint to discover which models are available for your chat completion API calls.
     */
    get: {
      responses: {
        /** @description List of available models */
        200: {
          content: {
            "application/json": components["schemas"]["ModelList"];
          };
        };
        /** @description Server error */
        500: {
          content: never;
        };
      };
    };
  };
  "/v1/models/{modelId}": {
    /**
     * Retrieve model information
     * @description Get detailed information about a specific model
     */
    get: {
      parameters: {
        path: {
          modelId: string;
        };
      };
      responses: {
        /** @description Model details */
        200: {
          content: {
            "application/json": components["schemas"]["Model"];
          };
        };
        /** @description Model not found */
        404: {
          content: never;
        };
        /** @description Server error */
        500: {
          content: never;
        };
      };
    };
  };
  "/v1/usage/tokens": {
    /**
     * Get token usage
     * @description Retrieves token usage data across all models for the current billing period. This helps you track your API usage and associated costs.
     */
    get: {
      responses: {
        /** @description Token usage data */
        200: {
          content: {
            "application/json": components["schemas"]["TokenUsageResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Server error */
        500: {
          content: never;
        };
      };
    };
  };
  "/v1/usage/tokens/{modelId}": {
    /**
     * Get token usage for a specific model
     * @description Retrieves token usage data for a specific model in the current billing period
     */
    get: {
      parameters: {
        path: {
          /** @description The model identifier */
          modelId: string;
        };
      };
      responses: {
        /** @description Model token usage data */
        200: {
          content: {
            "application/json": components["schemas"]["ModelTokenUsageResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Model not found */
        404: {
          content: never;
        };
        /** @description Server error */
        500: {
          content: never;
        };
      };
    };
  };
  "/v1/users": {
    /**
     * List team members
     * @description Retrieves a list of all users in your organization
     */
    get: {
      responses: {
        /** @description List of team members */
        200: {
          content: {
            "application/json": components["schemas"]["UserProfile"][];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorResponse"];
          };
        };
        /** @description Server error */
        500: {
          content: {
            "application/json": components["schemas"]["ErrorResponse"];
          };
        };
      };
    };
  };
  "/v1/users/me": {
    /**
     * Get current user profile
     * @description Retrieves the profile of the currently authenticated user
     */
    get: {
      responses: {
        /** @description User profile */
        200: {
          content: {
            "application/json": components["schemas"]["UserProfile"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorResponse"];
          };
        };
      };
    };
  };
  "/v1/users/{id}": {
    /**
     * Get user details
     * @description Retrieves details for a specific user
     */
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description User details */
        200: {
          content: {
            "application/json": components["schemas"]["UserProfile"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorResponse"];
          };
        };
        /** @description User not found */
        404: {
          content: {
            "application/json": components["schemas"]["ErrorResponse"];
          };
        };
      };
    };
    /**
     * Update user
     * @description Updates an existing user
     */
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["UpdateUser"];
        };
      };
      responses: {
        /** @description User updated */
        200: {
          content: {
            "application/json": components["schemas"]["UserProfile"];
          };
        };
        /** @description Invalid request */
        400: {
          content: {
            "application/json": components["schemas"]["ErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorResponse"];
          };
        };
      };
    };
    /**
     * Delete user
     * @description Deletes your own user account
     */
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description User deleted */
        204: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: {
            "application/json": components["schemas"]["ErrorResponse"];
          };
        };
        /** @description Cannot delete other users */
        403: {
          content: {
            "application/json": components["schemas"]["ErrorResponse"];
          };
        };
      };
    };
  };
  "/v1/users/invite": {
    /**
     * Invite team member
     * @description Invites a new team member to join your organization. They will receive an email with instructions to set up their account.
     */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["InviteUser"];
        };
      };
      responses: {
        /** @description Invitation sent successfully */
        200: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden - insufficient permissions */
        403: {
          content: never;
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    ApiKey: {
      /** @description Unique identifier for the API key */
      id: number;
      /** @description Name of the API key */
      name: string;
      /** @description Description of the API key */
      description: string | null;
      /** @description Whether the API key is active */
      active: boolean;
      /**
       * Format: date-time
       * @description Creation timestamp
       */
      created: string;
      /**
       * Format: date-time
       * @description Last modification timestamp
       */
      modified: string;
      /**
       * Format: date-time
       * @description Last usage timestamp
       */
      lastUsed: string | null;
      /** @description API key prefix (for display purposes) */
      prefix: string;
    };
    ApiKeyResponse: {
      /** @description Unique identifier for the API key */
      id: number;
      /** @description Name of the API key */
      name: string;
      /** @description Description of the API key */
      description: string | null;
      /** @description Whether the API key is active */
      active: boolean;
      /**
       * Format: date-time
       * @description Creation timestamp
       */
      created: string;
      /**
       * Format: date-time
       * @description Last modification timestamp
       */
      modified: string;
      /**
       * Format: date-time
       * @description Last usage timestamp
       */
      lastUsed: string | null;
      /** @description API key prefix (for display purposes) */
      prefix: string;
    };
    CreateApiKey: {
      /** @description Name of the API key */
      name: string;
      /** @description Description of the API key */
      description?: string;
    };
    CreateApiKeyResponse: {
      /** @description Unique identifier for the API key */
      id: number;
      /** @description Name of the API key */
      name: string;
      /** @description Description of the API key */
      description: string | null;
      /** @description The API key - only returned once at creation */
      key: string;
      /**
       * Format: date-time
       * @description Creation timestamp
       */
      created: string;
    };
    ApiKeyUsageEntry: {
      /** @description Date in YYYY-MM-DD format */
      date: string;
      /** @description Number of requests on this date */
      count: number;
    };
    ApiKeyModelUsage: {
      /** @description Model identifier */
      id: string;
      /** @description Model display name */
      name: string;
      /** @description Total number of requests to this model */
      requests: number;
      /** @description Token usage statistics */
      tokens: {
        /** @description Total input tokens */
        input: number;
        /** @description Total output tokens */
        output: number;
        /** @description Total tokens (input + output) */
        total: number;
      };
    };
    ApiKeyUsageResponse: {
      /** @description API key ID */
      id: number;
      /** @description API key name */
      name: string;
      /** @description Request statistics */
      requests: {
        /** @description Total number of requests */
        total: number;
        /** @description Daily request counts */
        daily: components["schemas"]["ApiKeyUsageEntry"][];
      };
      /** @description Usage statistics per model */
      models: components["schemas"]["ApiKeyModelUsage"][];
      /** @description Time period for the usage data */
      period: {
        /** @description Start date of the period (YYYY-MM-DD) */
        start: string;
        /** @description End date of the period (YYYY-MM-DD) */
        end: string;
      };
    };
    ApiKeyListResponse: components["schemas"]["ApiKey"][];
    AppTemplate: {
      /** @description Unique identifier for the app */
      id: string;
      /** @description Display name of the app */
      name: string;
      /** @description Category the app belongs to */
      category: string;
      /** @description Short description of the app */
      description: string;
      /** @description Number of installations */
      installs: string;
      /** @description User rating */
      rating: number;
      /** @description Icon identifier */
      icon: string;
      /** @description List of key features */
      features: string[];
      /** @description Resource requirements */
      requirements: {
        /** @description Required CPU cores */
        cpu: number;
        /** @description Required memory in GB */
        memory: number;
        /** @description Required storage in GB */
        storage: number;
      };
      /** @description Configuration options */
      configuration: OneOf<[{
          /** @description Configuration field name */
          name: string;
          /**
           * @description String input type
           * @enum {string}
           */
          type: "string";
          /** @description Whether this field is required */
          required: boolean;
          /** @description Default value if any */
          default?: string;
        }, {
          /** @description Configuration field name */
          name: string;
          /**
           * @description Number input type
           * @enum {string}
           */
          type: "number";
          /** @description Whether this field is required */
          required: boolean;
          /** @description Default value if any */
          default?: number;
        }, {
          /** @description Configuration field name */
          name: string;
          /**
           * @description Boolean toggle type
           * @enum {string}
           */
          type: "boolean";
          /** @description Whether this field is required */
          required: boolean;
          /** @description Default value if any */
          default?: boolean;
        }, {
          /** @description Configuration field name */
          name: string;
          /**
           * @description Dropdown select type
           * @enum {string}
           */
          type: "select";
          /** @description Whether this field is required */
          required: boolean;
          /** @description Default selected option */
          default?: string;
          /** @description Available options to select from */
          options: string[];
        }, {
          /** @description Configuration field name */
          name: string;
          /**
           * @description Password input type
           * @enum {string}
           */
          type: "password";
          /** @description Whether this field is required */
          required: boolean;
          /** @description Default value if any */
          default?: string;
        }]>[];
      /** @description Ingress configuration if applicable */
      ingress?: {
        /** @description Whether ingress is enabled for this app */
        enabled: boolean;
        /** @description Hostname pattern for the ingress */
        hostname: string;
        /** @description Path for the ingress */
        path: string;
        /** @description Whether TLS is enabled */
        tls: boolean;
      };
    };
    AppTemplateList: {
      data: {
          /** @description Unique identifier for the app */
          id: string;
          /** @description Display name of the app */
          name: string;
          /** @description Category the app belongs to */
          category: string;
          /** @description Short description of the app */
          description: string;
          /** @description Number of installations */
          installs: string;
          /** @description User rating */
          rating: number;
          /** @description Icon identifier */
          icon: string;
          /** @description List of key features */
          features: string[];
          /** @description Resource requirements */
          requirements: {
            /** @description Required CPU cores */
            cpu: number;
            /** @description Required memory in GB */
            memory: number;
            /** @description Required storage in GB */
            storage: number;
          };
          /** @description Configuration options */
          configuration: OneOf<[{
              /** @description Configuration field name */
              name: string;
              /**
               * @description String input type
               * @enum {string}
               */
              type: "string";
              /** @description Whether this field is required */
              required: boolean;
              /** @description Default value if any */
              default?: string;
            }, {
              /** @description Configuration field name */
              name: string;
              /**
               * @description Number input type
               * @enum {string}
               */
              type: "number";
              /** @description Whether this field is required */
              required: boolean;
              /** @description Default value if any */
              default?: number;
            }, {
              /** @description Configuration field name */
              name: string;
              /**
               * @description Boolean toggle type
               * @enum {string}
               */
              type: "boolean";
              /** @description Whether this field is required */
              required: boolean;
              /** @description Default value if any */
              default?: boolean;
            }, {
              /** @description Configuration field name */
              name: string;
              /**
               * @description Dropdown select type
               * @enum {string}
               */
              type: "select";
              /** @description Whether this field is required */
              required: boolean;
              /** @description Default selected option */
              default?: string;
              /** @description Available options to select from */
              options: string[];
            }, {
              /** @description Configuration field name */
              name: string;
              /**
               * @description Password input type
               * @enum {string}
               */
              type: "password";
              /** @description Whether this field is required */
              required: boolean;
              /** @description Default value if any */
              default?: string;
            }]>[];
          /** @description Ingress configuration if applicable */
          ingress?: {
            /** @description Whether ingress is enabled for this app */
            enabled: boolean;
            /** @description Hostname pattern for the ingress */
            hostname: string;
            /** @description Path for the ingress */
            path: string;
            /** @description Whether TLS is enabled */
            tls: boolean;
          };
        }[];
      /** @enum {string} */
      object: "list";
    };
    AppInstallRequest: {
      /** @description ID of the app to install */
      appId: string;
      /** @description Kubernetes namespace to install into */
      namespace: string;
      /** @description Configuration values */
      configuration: {
        [key: string]: string | number | boolean;
      };
    };
    AppInstallation: {
      /** @description Installation ID */
      id: string;
      /** @description App template ID */
      appId: string;
      /** @description App name */
      name: string;
      /** @description Kubernetes namespace */
      namespace: string;
      /**
       * @description Installation status
       * @enum {string}
       */
      status: "pending" | "installing" | "running" | "failed";
      /** @description Creation timestamp */
      created: string;
      /** @description Status message or error */
      message?: string;
      /** @description Access URL if available */
      url?: string;
      /** @description Applied configuration */
      configuration: {
        [key: string]: string | number | boolean;
      };
    };
    AppInstallationList: {
      data: ({
          /** @description Installation ID */
          id: string;
          /** @description App template ID */
          appId: string;
          /** @description App name */
          name: string;
          /** @description Kubernetes namespace */
          namespace: string;
          /**
           * @description Installation status
           * @enum {string}
           */
          status: "pending" | "installing" | "running" | "failed";
          /** @description Creation timestamp */
          created: string;
          /** @description Status message or error */
          message?: string;
          /** @description Access URL if available */
          url?: string;
          /** @description Applied configuration */
          configuration: {
            [key: string]: string | number | boolean;
          };
        })[];
      /** @enum {string} */
      object: "list";
    };
    AuthToken: {
      accessToken: string;
      /** @enum {string} */
      tokenType: "Bearer";
      expiresIn: number;
      user?: {
        id: string;
        name: string;
        /** Format: email */
        email: string;
      };
    };
    User: {
      id: string;
      login: string;
      name: string | null;
      /** Format: email */
      email: string | null;
      /** Format: uri */
      avatarUrl: string;
    };
    Usage: {
      current_period: {
        /** Format: date-time */
        start_date: string;
        /** Format: date-time */
        end_date: string;
      };
      metrics: {
          name: string;
          value: number;
          unit: string;
          cost: number;
          currency: string;
        }[];
      total: {
        amount: number;
        currency: string;
      };
    };
    Invoice: {
      id: string;
      number: string;
      /** Format: date-time */
      issuingDate: string;
      /** @enum {string} */
      paymentStatus: "pending" | "succeeded" | "failed";
      amount: number;
      currency: string;
      customerId: string;
      customer: {
        id: string;
        name: string;
        /** Format: email */
        email: string;
        /** Format: date-time */
        createdAt: string;
      };
    };
    PaymentMethod: {
      id: string;
      /** @enum {string} */
      type: "card" | "sepa";
      last4: string;
      expMonth?: number;
      expYear?: number;
      brand?: string;
      isDefault: boolean;
    };
    CreatePaymentMethod: {
      /** @enum {string} */
      type: "card" | "sepa";
      token: string;
      setDefault?: boolean;
    };
    UpdateSubscription: {
      planId: string;
      quantity?: number;
    };
    ChatMessage: {
      /**
       * @default user
       * @enum {string}
       */
      role?: "system" | "user" | "assistant";
      content: string;
    };
    ChatCompletionRequest: {
      model: string;
      messages: components["schemas"]["ChatMessage"][];
      temperature?: number;
      /** @default 4096 */
      max_tokens?: number;
      /** @default false */
      stream?: boolean;
      /** @default 1 */
      top_p?: number;
    };
    ChatCompletionResponse: {
      /** @description Unique identifier for this completion */
      id: string;
      /** @enum {string} */
      object: "chat.completion";
      /** @description Unix timestamp of when the completion was created */
      created: number;
      /** @description The model used for completion */
      model: string;
      choices: ({
          message: {
            /** @enum {string} */
            role: "assistant";
            /** @description The model's response */
            content: string;
          };
          /** @enum {string} */
          finish_reason: "stop" | "length" | "content_filter";
          index: number;
        })[];
      usage: {
        prompt_tokens: number;
        completion_tokens: number;
        total_tokens: number;
      };
    };
    Cluster: {
      /** @description Unique identifier for the cluster */
      id: string;
      /** @description Display name of the cluster */
      name: string;
      /** @description Cloud provider (AWS, GCP, Azure, etc.) */
      provider: string;
      /** @description Cloud region where the cluster is deployed */
      region: string;
      /** @description Kubernetes version */
      version: string;
      /** @description Number of nodes in the cluster */
      nodes: number;
      /**
       * @description Current status of the cluster
       * @enum {string}
       */
      status: "healthy" | "degraded" | "unhealthy" | "unknown";
      /**
       * Format: date-time
       * @description Creation timestamp
       */
      created: string;
    };
    ClusterList: {
      data: components["schemas"]["Cluster"][];
      /** @enum {string} */
      object: "list";
    };
    ResourceMetric: {
      /** @description Total allocated resources */
      allocated: number;
      /** @description Currently used resources */
      used: number;
      /** @description Available resources */
      available: number;
      /** @description Unit of measurement (e.g., cores, GB) */
      unit: string;
    };
    /** @description Cost breakdown */
    ClusterCost: {
      /** @description Cost for CPU resources */
      cpu: number;
      /** @description Cost for memory resources */
      memory: number;
      /** @description Cost for storage resources */
      storage: number;
      /** @description Cost for network resources */
      network: number;
      /** @description Total cost */
      total: number;
      /** @description Currency code (e.g., USD, EUR) */
      currency: string;
    };
    ClusterUsage: {
      /** @description Unique cluster identifier */
      id: string;
      /** @description Cluster name */
      name: string;
      /** @description Resource usage metrics */
      resources: {
        cpu: components["schemas"]["ResourceMetric"];
        memory: components["schemas"]["ResourceMetric"];
        storage: components["schemas"]["ResourceMetric"];
      };
      cost: components["schemas"]["ClusterCost"];
      /** @description Number of nodes in the cluster */
      nodes: number;
      /** @description Current cluster status */
      status: string;
    };
    ResourceMetricWithTrend: components["schemas"]["ResourceMetric"] & {
      /** @description Historical usage trend data */
      usage_trend: {
          /** @description Date in YYYY-MM-DD format */
          date: string;
          /** @description Resource usage value for this date */
          value: number;
        }[];
    };
    DailyCost: {
      /** @description Date in YYYY-MM-DD format */
      date: string;
      /** @description CPU cost for this day */
      cpu: number;
      /** @description Memory cost for this day */
      memory: number;
      /** @description Storage cost for this day */
      storage: number;
      /** @description Network cost for this day */
      network: number;
      /** @description Total cost for this day */
      total: number;
    };
    /** @description Detailed cost breakdown with daily data */
    ClusterCostWithDaily: components["schemas"]["ClusterCost"] & {
      /** @description Daily cost breakdown */
      daily: components["schemas"]["DailyCost"][];
    };
    ClusterDetailedUsage: {
      /** @description Unique cluster identifier */
      id: string;
      /** @description Cluster name */
      name: string;
      /** @description Detailed resource usage metrics with trends */
      resources: {
        cpu: components["schemas"]["ResourceMetricWithTrend"];
        memory: components["schemas"]["ResourceMetricWithTrend"];
        storage: components["schemas"]["ResourceMetricWithTrend"];
      };
      cost: components["schemas"]["ClusterCostWithDaily"];
      /** @description Number of nodes in the cluster */
      nodes: number;
      /** @description Current cluster status */
      status: string;
      /** @description Time period for the usage data */
      period: {
        /** @description Start date of the period (YYYY-MM-DD) */
        start: string;
        /** @description End date of the period (YYYY-MM-DD) */
        end: string;
      };
    };
    ClustersUsageResponse: {
      /** @description List of clusters with usage data */
      clusters: components["schemas"]["ClusterUsage"][];
      /** @description Time period for the usage data */
      period: {
        /** @description Start date of the period (YYYY-MM-DD) */
        start: string;
        /** @description End date of the period (YYYY-MM-DD) */
        end: string;
      };
      /** @description Aggregated totals */
      total: {
        /** @description Total cost breakdown across all clusters */
        cost: {
          /** @description Total CPU cost across all clusters */
          cpu: number;
          /** @description Total memory cost across all clusters */
          memory: number;
          /** @description Total storage cost across all clusters */
          storage: number;
          /** @description Total network cost across all clusters */
          network: number;
          /** @description Total cost across all clusters */
          total: number;
          /** @description Currency code (e.g., USD, EUR) */
          currency: string;
        };
      };
    };
    Model: {
      /** @description Unique identifier for the model */
      id: string;
      /** @description Name of the model */
      name: string;
      /** @description Description of the model */
      description: string;
      /** @description Whether the model is active */
      active: boolean;
    };
    ModelList: components["schemas"]["Model"][];
    /** @description Cost information for this usage */
    TokenCost: {
      /** @description Cost amount */
      amount: number;
      /** @description Currency code (e.g., USD, EUR) */
      currency: string;
    };
    DailyTokenUsage: {
      /** @description Usage date in YYYY-MM-DD format */
      date: string;
      /** @description Model identifier */
      model?: string;
      /** @description Number of input tokens used */
      input_tokens: number;
      /** @description Number of output tokens generated */
      output_tokens: number;
      /** @description Total tokens (input + output) */
      total_tokens: number;
      cost: components["schemas"]["TokenCost"];
    };
    /** @description Aggregated usage totals */
    TokenUsageTotal: {
      /** @description Total input tokens for the period */
      input_tokens: number;
      /** @description Total output tokens for the period */
      output_tokens: number;
      /** @description Total tokens for the period */
      total_tokens: number;
      cost: components["schemas"]["TokenCost"];
    };
    /** @description Time period for the usage data */
    TokenUsagePeriod: {
      /** @description Start date of the period (YYYY-MM-DD) */
      start: string;
      /** @description End date of the period (YYYY-MM-DD) */
      end: string;
    };
    TokenUsageResponse: {
      /** @description Daily token usage data */
      usage: components["schemas"]["DailyTokenUsage"][];
      total: components["schemas"]["TokenUsageTotal"];
      period: components["schemas"]["TokenUsagePeriod"];
    };
    ModelTokenUsageResponse: {
      /** @description Model identifier */
      model: string;
      /** @description Daily token usage data */
      usage: components["schemas"]["DailyTokenUsage"][];
      total: components["schemas"]["TokenUsageTotal"];
      period: components["schemas"]["TokenUsagePeriod"];
    };
    /** @description Complete user profile including company details */
    UserProfile: {
      /** @description Unique identifier for the user */
      id: string;
      /**
       * Format: email
       * @description User's email address
       */
      email: string;
      /** @description Full name of the user */
      name: string;
      /** @description Contact phone number */
      phone: string | null;
      /** @description ID of the company the user belongs to */
      company_id: number;
      /** @description Username for login */
      login: string;
      /**
       * @description User role determining permissions
       * @enum {string}
       */
      role: "admin" | "member";
      /** @description Whether the user account is active */
      active: boolean | null;
      /**
       * Format: date-time
       * @description When the user was created
       */
      createdAt: string | null;
      /**
       * Format: date-time
       * @description Last update timestamp
       */
      updatedAt: string | null;
      /** @description User preferences and settings */
      settings?: {
        /** @description Email notification preferences */
        notifications: boolean;
        /** @description User's preferred timezone */
        timezone: string;
        /** @description Preferred interface language */
        language?: string;
        /**
         * @description UI theme preference
         * @enum {string}
         */
        theme?: "light" | "dark" | "system";
      };
      /** @description Associated company details */
      company?: {
        /** @description Company unique identifier */
        id: number;
        /** @description Legal company name */
        name: string;
        /** @description VAT identification number */
        vat: string;
        /**
         * Format: email
         * @description Company email address
         */
        email: string;
        /** @description Company phone number */
        phone: string | null;
        /** @description Street address */
        street: string | null;
        /** @description City */
        city: string | null;
        /** @description Company country information */
        country: {
          /** @description Country ID */
          id: number;
          /** @description Country name */
          name: string;
          /** @description ISO country code */
          code: string;
        } | null;
      };
    };
    CreateUser: {
      name: string;
      /** Format: email */
      email: string;
      phone: string | null;
      company_id: number;
      /** @enum {string} */
      role: "admin" | "member";
      settings?: {
        notifications: boolean;
        timezone: string;
        language?: string;
        /** @enum {string} */
        theme?: "light" | "dark" | "system";
      };
    };
    UpdateUser: {
      name?: string;
      /** Format: email */
      email?: string;
      phone?: string | null;
      settings?: {
        notifications: boolean;
        timezone: string;
        language?: string;
        /** @enum {string} */
        theme?: "light" | "dark" | "system";
      };
    };
    InviteUser: {
      /**
       * Format: email
       * @description Email address of the person to invite
       */
      email: string;
      /**
       * @description Role to assign to the new team member
       * @enum {string}
       */
      role: "admin" | "member";
      /** @description Company ID to invite the user to (defaults to current user's company) */
      companyId?: number;
    };
    ErrorResponse: {
      error: string;
      code?: string;
      details?: unknown;
    };
    HealthCheck: {
      status: string;
      timestamp: string;
      version: string;
      npmVersion: string;
      environment: string;
    };
  };
  responses: never;
  parameters: {
  };
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
